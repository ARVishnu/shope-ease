name: Deploy React App to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Deploy to EC2
        run: |
          # Write the private SSH key from GitHub Secrets to a file
          echo "${{ secrets.AWS_SSH_KEY }}" > aws_ssh_key.pem
          chmod 600 aws_ssh_key.pem  # Set proper file permissions for the private key
          eval "$(ssh-agent -s)"     # Start SSH agent
          ssh-add aws_ssh_key.pem    # Add SSH key to the agent

          # SSH into the EC2 instance and deploy the React app
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Navigate to the workspace folder
            cd /home/ubuntu/workspace  # Corrected the path to use a space between `cd` and the path

            # Check if the project directory exists. If not, clone the repository.
            if [ ! -d "/home/ubuntu/workspace/shope-ease/.git" ]; then
              git clone https://github.com/ARVishnu/shope-ease.git shope-ease
            else
              # If the repo already exists, pull the latest changes
              cd /home/ubuntu/workspace/shope-ease
              git pull origin main
            fi

            # Navigate to the project directory
            cd /home/ubuntu/workspace/shope-ease

            # Install dependencies (if there are any new dependencies)
            npm install

            # Build the React app for production
            npm run build

            # Install `http-server` globally to serve the React app (or you can use `serve`)
            npm install -g http-server

            # Run the app on port 80 using `sudo` (privileged port)
            sudo nohup http-server ./build -p 80 &

            # Optionally, check if the server is running
            ps aux | grep http-server
          EOF
