# name: Deploy React App to AWS EC2 with Docker

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install dependencies
#         run: npm install

#       - name: Build React app
#         run: npm run build

#       - name: Deploy Dockerized React App to EC2
#         run: |
#           echo "${{ secrets.AWS_SSH_KEY }}" > aws_ssh_key.pem
#           chmod 600 aws_ssh_key.pem
#           eval "$(ssh-agent -s)"
#           ssh-add aws_ssh_key.pem

#           ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
#             set -e
#             # Ensure Docker is installed
#             if ! command -v docker &> /dev/null; then
#               sudo apt-get update
#               sudo apt-get install -y docker.io
#             fi

#             mkdir -p /home/ubuntu/workspace
#             cd /home/ubuntu/workspace

#             # Clone or update repository
#             if [ ! -d "shope-ease" ]; then
#               git clone https://${{ secrets.USERNAME }}:${{ secrets.PAT }}@github.com/ARVishnu/shope-ease.git
#               cd shope-ease
#             else
#               cd shope-ease
#               git pull origin main
#             fi

#             # Generate Dockerfile
#             cat << 'EOF2' > Dockerfile
#             # Stage 1: Build React app
#             FROM node:18-alpine as build
#             WORKDIR /app
#             COPY package.json package-lock.json ./
#             RUN npm install
#             COPY . .
#             RUN npm run build

#             # Stage 2: Serve with Nginx
#             FROM nginx:alpine
#             COPY --from=dist /app/dist /usr/share/nginx/html
#             EXPOSE 80
#             CMD ["nginx", "-g", "daemon off;"]
#             EOF2

#             # Build and run Docker container
#             sudo docker build -t react-app .
#             sudo docker ps -q --filter "name=react-app" | xargs -r sudo docker stop
#             sudo docker ps -a -q --filter "name=react-app" | xargs -r sudo docker rm
#             sudo docker run -d -p 80:80 --name react-app react-app
#             sudo docker system prune -f

#             echo "Deployment successful!"
#           EOF
