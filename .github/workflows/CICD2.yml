name: Deploy React App to AWS EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Build Docker image and Deploy to EC2
        run: |
          # Write the private SSH key from GitHub Secrets to a file
          echo "${{ secrets.AWS_SSH_KEY }}" > aws_ssh_key.pem
          chmod 600 aws_ssh_key.pem  # Set proper file permissions for the private key
          eval "$(ssh-agent -s)"     # Start SSH agent
          ssh-add aws_ssh_key.pem    # Add SSH key to the agent

          # SSH into the EC2 instance and deploy the Dockerized React app
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed. Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y docker.io
            fi

            # Navigate to the workspace
            mkdir -p /home/ubuntu/workspace
            cd /home/ubuntu/workspace

            # Clone the repository or pull the latest changes
            if [ ! -d "shope-ease" ]; then
              git clone https://${{ secrets.USERNAME }}:${{ secrets.PAT }}@github.com/ARVishnu/shope-ease.git
            else
              cd shope-ease
              git pull https://${{ secrets.USERNAME }}:${{ secrets.PAT }}@github.com/ARVishnu/shope-ease.git main
            fi

            cd shope-ease

            # Copy the Dockerfile to EC2 if it doesn't already exist
            if [ ! -f Dockerfile ]; then
              cat << 'EOF2' > Dockerfile
              # Stage 1: Build the React app
              FROM node:18-alpine as build

              WORKDIR /app

              COPY package.json package-lock.json ./
              RUN npm install

              COPY . .
              RUN npm run build

              # Stage 2: Serve the app with Nginx
              FROM nginx:alpine

              COPY --from=dist /app/dist /usr/share/nginx/html
              EXPOSE 80
              CMD ["nginx", "-g", "daemon off;"]
              EOF2
            fi

            # Build the Docker image
            sudo docker build -t react-app .

            # Stop and remove any existing container
            sudo docker ps -q --filter "name=react-app" | xargs -r sudo docker stop
            sudo docker ps -a -q --filter "name=react-app" | xargs -r
